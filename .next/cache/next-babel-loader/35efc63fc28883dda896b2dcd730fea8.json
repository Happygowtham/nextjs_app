{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\n\nconst Signup = () => {\n  const {\n    0: signupError,\n    1: setSignupError\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState(''); //const [passwordConfirmation, setPasswordConfirmation] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(r => r.json()).then(data => {\n      if (data && data.error) {\n        setSignupError(data.message);\n      }\n\n      if (data && data.token) {\n        //set cookie\n        cookie.set('token', data.token, {\n          expires: 2\n        });\n        Router.push('/');\n      }\n    });\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"p\", null, __jsx(\"b\", null, \"Sign Up\")), __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email\", __jsx(\"input\", {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    name: \"email\",\n    type: \"email\",\n    required: \"true\"\n  })), __jsx(\"br\", null), __jsx(\"label\", {\n    for: \"password\"\n  }, \"Password\", __jsx(\"input\", {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    name: \"password\",\n    type: \"password\",\n    required: \"true\"\n  })), __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Signup\"\n  }), signupError && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    }\n  }, signupError));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}